#!/usr/bin/env python3
import subprocess
from argparse import ArgumentParser
from os import environ as env
from tempfile import NamedTemporaryFile, mkstemp
from shutil import move
from html import unescape, escape

def flusher(d, entry):
    def fn():
        if entry['key']:
            d[entry['key']] = entry['value']
            entry['key']    = None
            entry['value']  = None
    return fn

def key_setter(entry):
    def fn(k):
        entry['key'] = k
    return fn

def value_setter(entry):
    def fn(v):
        entry['value'] = v
    return fn

argparser = ArgumentParser()
argparser.add_argument('input')
argparser.add_argument('output', nargs='?')
args = argparser.parse_args()

lines = subprocess.check_output(['pdftk', args.input, 'dump_data'])
lines = lines.decode('utf-8').split("\n")

info = {}
entry = {'key': None, 'value': None}
flush = flusher(info, entry)
set_key = key_setter(entry)
set_value = value_setter(entry)

for line in lines:
    if line == 'InfoBegin':
        flush()
    if line.startswith('InfoKey:'):
        set_key(line.partition(':')[2].strip())
    if line.startswith('InfoValue:'):
        set_value(line.partition(':')[2].strip())

tmp = NamedTemporaryFile(mode='w+', encoding='utf-8')
for k, v in sorted(info.items()):
    tmp.write(k)
    tmp.write(': ')
    tmp.write(unescape(v))
    tmp.write('\n')
tmp.flush()

subprocess.call([env['EDITOR'], tmp.name])

buff = []
append = buff.append
tmp.seek(0)
for line in tmp:
    key, delim, value = line.partition(':')
    if key and value:
        append('InfoBegin')
        append('InfoKey: ' + key)
        append('InfoValue: ' + value.strip())

tmp.seek(0)
tmp.write("\n".join(buff))
tmp.flush()

if args.output is None:
    handle, tmp_output = mkstemp()
    subprocess.call(['pdftk', args.input, 'update_info_utf8', tmp.name, 'output', tmp_output])
    move(tmp_output, args.input)
else:
    subprocess.call(['pdftk', args.input, 'update_info_utf8', tmp.name, 'output', args.output])
